// <auto-generated />
using System;
using BE_Healthcare.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BE_Healthcare.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20240623100509_Collect_Data_v1__Role_MedicalSpecialty_User")]
    partial class Collect_Data_v1__Role_MedicalSpecialty_User
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BE_Healthcare.Data.Entities.Appointment", b =>
                {
                    b.Property<int>("IdAppointment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("Date");

                    b.Property<string>("EndTime")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("IdDoctor")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("IdUser")
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsRating")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Issue")
                        .HasColumnType("longtext");

                    b.Property<double?>("Price")
                        .HasColumnType("double");

                    b.Property<string>("Reason")
                        .HasColumnType("longtext");

                    b.Property<string>("StartTime")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("StartTimeOfExamination")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<bool>("Type")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("idDoctorCancel")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("idUserCancel")
                        .HasColumnType("char(36)");

                    b.HasKey("IdAppointment");

                    b.HasIndex("IdDoctor");

                    b.HasIndex("IdUser");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("BE_Healthcare.Data.Entities.Certificate", b =>
                {
                    b.Property<int>("IdCertificate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("IdDoctor")
                        .HasColumnType("char(36)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("StatusVerified")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("IdCertificate");

                    b.HasIndex("IdDoctor");

                    b.ToTable("Certificates");
                });

            modelBuilder.Entity("BE_Healthcare.Data.Entities.Doctor", b =>
                {
                    b.Property<Guid>("IdDoctor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("BusinessLicense")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int?>("DurationPerAppointment")
                        .HasColumnType("int");

                    b.Property<int?>("IdSpecialty")
                        .HasColumnType("int");

                    b.Property<Guid>("IdUser")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("IsVerifiedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsVerifiedInfoCertificate")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsVerifiedInfoTrainingProcess")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsVerifiedInfoWorkingProcess")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("NameClinic")
                        .HasColumnType("longtext");

                    b.Property<int>("NumberOfComment")
                        .HasColumnType("int");

                    b.Property<double?>("Price")
                        .HasColumnType("double");

                    b.Property<double?>("RateAverage")
                        .HasColumnType("double");

                    b.Property<int?>("StatusVerified")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("WorkingTimeEnd")
                        .HasColumnType("longtext");

                    b.Property<string>("WorkingTimeStart")
                        .HasColumnType("longtext");

                    b.Property<int?>("YearExperience")
                        .HasColumnType("int");

                    b.HasKey("IdDoctor");

                    b.HasIndex("IdSpecialty");

                    b.HasIndex("IdUser")
                        .IsUnique();

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("BE_Healthcare.Data.Entities.MedicalRecord", b =>
                {
                    b.Property<int>("IdMedicalRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int>("IdAppointment")
                        .HasColumnType("int");

                    b.Property<Guid>("IdDoctor")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("IdUser")
                        .HasColumnType("char(36)");

                    b.Property<double>("Temperature")
                        .HasColumnType("double");

                    b.Property<double>("Weight")
                        .HasColumnType("double");

                    b.HasKey("IdMedicalRecord");

                    b.HasIndex("IdDoctor");

                    b.HasIndex("IdUser");

                    b.ToTable("MedicalRecords");
                });

            modelBuilder.Entity("BE_Healthcare.Data.Entities.MedicalSpecialty", b =>
                {
                    b.Property<int>("IdSpecialty")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Image")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdSpecialty");

                    b.ToTable("MedicalSpecialties");

                    b.HasData(
                        new
                        {
                            IdSpecialty = 1,
                            CreatedAt = new DateTime(2024, 6, 23, 17, 5, 9, 495, DateTimeKind.Local).AddTicks(6142),
                            Image = "https://res.cloudinary.com/dzdfqqdxs/image/upload/v1718981095/yzdx4mxo3nsso9fflv4l.webp",
                            Name = "Internal Medicine"
                        },
                        new
                        {
                            IdSpecialty = 2,
                            CreatedAt = new DateTime(2024, 6, 23, 17, 5, 9, 495, DateTimeKind.Local).AddTicks(6160),
                            Image = "https://res.cloudinary.com/dzdfqqdxs/image/upload/v1718981242/codte5bzrbjlmhdboe18.webp",
                            Name = "General Surgery"
                        },
                        new
                        {
                            IdSpecialty = 3,
                            CreatedAt = new DateTime(2024, 6, 23, 17, 5, 9, 495, DateTimeKind.Local).AddTicks(6163),
                            Image = "https://cdn-healthcare.hellohealthgroup.com/specialties/san-phu-khoa.png",
                            Name = "Obstetrics and Gynecology"
                        },
                        new
                        {
                            IdSpecialty = 4,
                            CreatedAt = new DateTime(2024, 6, 23, 17, 5, 9, 495, DateTimeKind.Local).AddTicks(6164),
                            Image = "https://cdn-healthcare.hellohealthgroup.com/specialties/nhi-khoa.png",
                            Name = "Pediatrics"
                        },
                        new
                        {
                            IdSpecialty = 5,
                            CreatedAt = new DateTime(2024, 6, 23, 17, 5, 9, 495, DateTimeKind.Local).AddTicks(6165),
                            Image = "https://res.cloudinary.com/dbtam9pnc/image/upload/v1713413379/Doctor/gigu9hqbvlrdth4y77pv.webp",
                            Name = "Emergency Medicine"
                        },
                        new
                        {
                            IdSpecialty = 6,
                            CreatedAt = new DateTime(2024, 6, 23, 17, 5, 9, 495, DateTimeKind.Local).AddTicks(6166),
                            Image = "https://cdn-healthcare.hellohealthgroup.com/specialties/da-lieu.png",
                            Name = "Dermatology"
                        },
                        new
                        {
                            IdSpecialty = 7,
                            CreatedAt = new DateTime(2024, 6, 23, 17, 5, 9, 495, DateTimeKind.Local).AddTicks(6167),
                            Image = "https://cdn-healthcare.hellohealthgroup.com/specialties/nha-khoa.png",
                            Name = "Dentistry"
                        },
                        new
                        {
                            IdSpecialty = 8,
                            CreatedAt = new DateTime(2024, 6, 23, 17, 5, 9, 495, DateTimeKind.Local).AddTicks(6168),
                            Image = "https://cdn-healthcare.hellohealthgroup.com/2022/03/1648190355_623d6393ac9b40.00770044.jpg",
                            Name = "Plastic Surgery"
                        },
                        new
                        {
                            IdSpecialty = 10,
                            CreatedAt = new DateTime(2024, 6, 23, 17, 5, 9, 495, DateTimeKind.Local).AddTicks(6169),
                            Image = "https://cdn-healthcare.hellohealthgroup.com/specialties/tim-mach.png",
                            Name = "Cardiology"
                        },
                        new
                        {
                            IdSpecialty = 11,
                            CreatedAt = new DateTime(2024, 6, 23, 17, 5, 9, 495, DateTimeKind.Local).AddTicks(6170),
                            Image = "https://cdn-healthcare.hellohealthgroup.com/specialties/khoa-phoi.png",
                            Name = "Pulmonology"
                        },
                        new
                        {
                            IdSpecialty = 12,
                            CreatedAt = new DateTime(2024, 6, 23, 17, 5, 9, 495, DateTimeKind.Local).AddTicks(6171),
                            Image = "https://cdn-healthcare.hellohealthgroup.com/2022/03/1648192254_623d6afed218d0.32746408.jpg",
                            Name = "Gastroenterology"
                        },
                        new
                        {
                            IdSpecialty = 13,
                            CreatedAt = new DateTime(2024, 6, 23, 17, 5, 9, 495, DateTimeKind.Local).AddTicks(6172),
                            Image = "https://cdn-healthcare.hellohealthgroup.com/specialties/huyet-hoc.png",
                            Name = "Hematology"
                        },
                        new
                        {
                            IdSpecialty = 14,
                            CreatedAt = new DateTime(2024, 6, 23, 17, 5, 9, 495, DateTimeKind.Local).AddTicks(6173),
                            Image = "https://cdn-healthcare.hellohealthgroup.com/specialties/khoa-noi-tiet.png",
                            Name = "Endocrinology"
                        },
                        new
                        {
                            IdSpecialty = 15,
                            CreatedAt = new DateTime(2024, 6, 23, 17, 5, 9, 495, DateTimeKind.Local).AddTicks(6174),
                            Image = "https://cdn-healthcare.hellohealthgroup.com/2022/03/1648192124_623d6a7cca01f2.62072083.jpg",
                            Name = "Public Health"
                        },
                        new
                        {
                            IdSpecialty = 17,
                            CreatedAt = new DateTime(2024, 6, 23, 17, 5, 9, 495, DateTimeKind.Local).AddTicks(6175),
                            Image = "https://cdn-healthcare.hellohealthgroup.com/2022/09/1663834655_632c1a1f872a42.63080420.jpg",
                            Name = "Psychiatry"
                        },
                        new
                        {
                            IdSpecialty = 18,
                            CreatedAt = new DateTime(2024, 6, 23, 17, 5, 9, 495, DateTimeKind.Local).AddTicks(6177),
                            Image = "https://cdn-healthcare.hellohealthgroup.com/2022/03/1648189960_623d6208833488.26923360.jpg",
                            Name = "Traditional Medicine"
                        });
                });

            modelBuilder.Entity("BE_Healthcare.Data.Entities.Rating", b =>
                {
                    b.Property<int>("IdRating")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdAppointment")
                        .HasColumnType("int");

                    b.Property<Guid?>("IdDoctor")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("IdUser")
                        .HasColumnType("char(36)");

                    b.Property<int>("RatingScore")
                        .HasColumnType("int");

                    b.HasKey("IdRating");

                    b.HasIndex("IdDoctor");

                    b.HasIndex("IdUser");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("BE_Healthcare.Data.Entities.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("ExpiredAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsRevoked")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("IssuedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("JwtId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshToken");
                });

            modelBuilder.Entity("BE_Healthcare.Data.Entities.Role", b =>
                {
                    b.Property<int>("IdRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("IdRole");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            IdRole = 1,
                            Name = "User"
                        },
                        new
                        {
                            IdRole = 2,
                            Name = "Doctor"
                        },
                        new
                        {
                            IdRole = 3,
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("BE_Healthcare.Data.Entities.TimeOff", b =>
                {
                    b.Property<int>("IdTimeOff")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("Date");

                    b.Property<string>("EndTime")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("IdDoctor")
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsFixed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Reason")
                        .HasColumnType("longtext");

                    b.Property<string>("StartTime")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("IdTimeOff");

                    b.HasIndex("IdDoctor");

                    b.ToTable("TimeOffs");
                });

            modelBuilder.Entity("BE_Healthcare.Data.Entities.TrainingProcess", b =>
                {
                    b.Property<int>("IdTrainingProcess")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("EndYear")
                        .HasColumnType("int");

                    b.Property<Guid?>("IdDoctor")
                        .HasColumnType("char(36)");

                    b.Property<string>("Major")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SchoolName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("StartYear")
                        .HasColumnType("int");

                    b.Property<int?>("StatusVerified")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("IdTrainingProcess");

                    b.HasIndex("IdDoctor");

                    b.ToTable("TrainingProcesses");
                });

            modelBuilder.Entity("BE_Healthcare.Data.Entities.User", b =>
                {
                    b.Property<Guid>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<string>("Avatar")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DOB")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<bool?>("Gender")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsAdminDisabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime?>("OTPCreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("OTPVerification")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("ReasonLockAccount")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("idRole")
                        .HasColumnType("int");

                    b.Property<string>("latitude")
                        .HasColumnType("longtext");

                    b.Property<string>("longtitude")
                        .HasColumnType("longtext");

                    b.HasKey("IdUser");

                    b.HasIndex("idRole");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            IdUser = new Guid("9117c626-c3d0-4d14-b345-d70d85268623"),
                            Address = "124 Bui Giang, Hoa An, Cam Le, Da Nang",
                            Avatar = "https://res.cloudinary.com/dzdfqqdxs/image/upload/v1718979661/zslqmoxwlm5n6vjnbd6k.png",
                            CreatedAt = new DateTime(2024, 6, 23, 17, 5, 9, 495, DateTimeKind.Local).AddTicks(6885),
                            DOB = new DateTime(2002, 8, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "nguyenquocthanh268@gmail.com",
                            Gender = true,
                            IsAdminDisabled = false,
                            IsLocked = false,
                            IsVerified = true,
                            Name = "Nguyen Quoc Thanh",
                            OTPCreatedAt = new DateTime(2024, 6, 23, 10, 5, 9, 495, DateTimeKind.Utc).AddTicks(7031),
                            OTPVerification = "123456",
                            PasswordHash = new byte[] { 67, 247, 87, 14, 16, 78, 130, 63, 107, 5, 190, 219, 169, 236, 147, 1, 124, 79, 160, 255, 172, 142, 152, 99, 251, 212, 13, 36, 134, 233, 58, 60 },
                            PasswordSalt = new byte[] { 50, 252, 0, 220, 10, 236, 172, 37, 173, 200, 156, 229, 183, 90, 121, 51, 42, 74, 54, 3, 213, 73, 19, 136, 4, 131, 170, 72, 89, 92, 192, 90, 9, 221, 218, 29, 136, 0, 70, 84, 248, 161, 220, 52, 126, 66, 106, 100, 91, 113, 251, 221, 27, 126, 103, 168, 79, 36, 137, 32, 68, 42, 185, 121 },
                            PhoneNumber = "0905030133",
                            idRole = 1
                        },
                        new
                        {
                            IdUser = new Guid("85f97fe1-83e4-4dcc-91ca-367cb29f148e"),
                            Address = "Tuy Loan, Hoa Vang, Cam Le, Da Nang",
                            Avatar = "https://res.cloudinary.com/dzdfqqdxs/image/upload/v1718979443/jvjdj7mso2fzqlhsqtgt.png",
                            CreatedAt = new DateTime(2024, 6, 23, 17, 5, 9, 495, DateTimeKind.Local).AddTicks(7036),
                            DOB = new DateTime(2002, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "buivanhuy@gmail.com",
                            Gender = true,
                            IsAdminDisabled = false,
                            IsLocked = false,
                            IsVerified = true,
                            Name = "Huy Bui",
                            OTPCreatedAt = new DateTime(2024, 6, 23, 10, 5, 9, 495, DateTimeKind.Utc).AddTicks(7063),
                            OTPVerification = "123456",
                            PasswordHash = new byte[] { 67, 247, 87, 14, 16, 78, 130, 63, 107, 5, 190, 219, 169, 236, 147, 1, 124, 79, 160, 255, 172, 142, 152, 99, 251, 212, 13, 36, 134, 233, 58, 60 },
                            PasswordSalt = new byte[] { 50, 252, 0, 220, 10, 236, 172, 37, 173, 200, 156, 229, 183, 90, 121, 51, 42, 74, 54, 3, 213, 73, 19, 136, 4, 131, 170, 72, 89, 92, 192, 90, 9, 221, 218, 29, 136, 0, 70, 84, 248, 161, 220, 52, 126, 66, 106, 100, 91, 113, 251, 221, 27, 126, 103, 168, 79, 36, 137, 32, 68, 42, 185, 121 },
                            PhoneNumber = "0905415721",
                            idRole = 1
                        },
                        new
                        {
                            IdUser = new Guid("bfa4b5ec-1ad8-4676-8871-122749af64e4"),
                            Address = "Ngu Hanh Son, Da Nang",
                            CreatedAt = new DateTime(2024, 6, 23, 17, 5, 9, 495, DateTimeKind.Local).AddTicks(7064),
                            DOB = new DateTime(2002, 10, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "anhoang@gmail.com",
                            Gender = false,
                            IsAdminDisabled = false,
                            IsLocked = false,
                            IsVerified = true,
                            Name = "Vo A Hoang",
                            OTPCreatedAt = new DateTime(2024, 6, 23, 10, 5, 9, 495, DateTimeKind.Utc).AddTicks(7089),
                            OTPVerification = "123456",
                            PasswordHash = new byte[] { 67, 247, 87, 14, 16, 78, 130, 63, 107, 5, 190, 219, 169, 236, 147, 1, 124, 79, 160, 255, 172, 142, 152, 99, 251, 212, 13, 36, 134, 233, 58, 60 },
                            PasswordSalt = new byte[] { 50, 252, 0, 220, 10, 236, 172, 37, 173, 200, 156, 229, 183, 90, 121, 51, 42, 74, 54, 3, 213, 73, 19, 136, 4, 131, 170, 72, 89, 92, 192, 90, 9, 221, 218, 29, 136, 0, 70, 84, 248, 161, 220, 52, 126, 66, 106, 100, 91, 113, 251, 221, 27, 126, 103, 168, 79, 36, 137, 32, 68, 42, 185, 121 },
                            PhoneNumber = "0921843174",
                            idRole = 1
                        },
                        new
                        {
                            IdUser = new Guid("1ba4b5ec-1ad8-4676-8871-122749af64e4"),
                            Address = "45 Elm Street, Springfield, IL",
                            Avatar = "https://res.cloudinary.com/dzdfqqdxs/image/upload/v1719069524/v8hu3qi9f8soqsagswtn.jpg",
                            CreatedAt = new DateTime(2024, 6, 23, 17, 5, 9, 495, DateTimeKind.Local).AddTicks(7091),
                            DOB = new DateTime(1990, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "john.doe@gmail.com",
                            Gender = true,
                            IsAdminDisabled = false,
                            IsLocked = false,
                            IsVerified = true,
                            Name = "John Doe",
                            OTPCreatedAt = new DateTime(2024, 6, 23, 10, 5, 9, 495, DateTimeKind.Utc).AddTicks(7113),
                            OTPVerification = "123456",
                            PasswordHash = new byte[] { 67, 247, 87, 14, 16, 78, 130, 63, 107, 5, 190, 219, 169, 236, 147, 1, 124, 79, 160, 255, 172, 142, 152, 99, 251, 212, 13, 36, 134, 233, 58, 60 },
                            PasswordSalt = new byte[] { 50, 252, 0, 220, 10, 236, 172, 37, 173, 200, 156, 229, 183, 90, 121, 51, 42, 74, 54, 3, 213, 73, 19, 136, 4, 131, 170, 72, 89, 92, 192, 90, 9, 221, 218, 29, 136, 0, 70, 84, 248, 161, 220, 52, 126, 66, 106, 100, 91, 113, 251, 221, 27, 126, 103, 168, 79, 36, 137, 32, 68, 42, 185, 121 },
                            PhoneNumber = "0905001234",
                            idRole = 1
                        },
                        new
                        {
                            IdUser = new Guid("2ba4b5ec-1ad8-4676-8871-122749af64e4"),
                            Address = "123 Maple Avenue, Anytown, TX",
                            Avatar = "https://res.cloudinary.com/dzdfqqdxs/image/upload/v1719069584/n1gpp4jdduagdkvdwkfq.jpg",
                            CreatedAt = new DateTime(2024, 6, 23, 17, 5, 9, 495, DateTimeKind.Local).AddTicks(7115),
                            DOB = new DateTime(1985, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jane.smith@gmail.com",
                            Gender = false,
                            IsAdminDisabled = false,
                            IsLocked = false,
                            IsVerified = true,
                            Name = "Jane Smith",
                            OTPCreatedAt = new DateTime(2024, 6, 23, 10, 5, 9, 495, DateTimeKind.Utc).AddTicks(7135),
                            OTPVerification = "123456",
                            PasswordHash = new byte[] { 67, 247, 87, 14, 16, 78, 130, 63, 107, 5, 190, 219, 169, 236, 147, 1, 124, 79, 160, 255, 172, 142, 152, 99, 251, 212, 13, 36, 134, 233, 58, 60 },
                            PasswordSalt = new byte[] { 50, 252, 0, 220, 10, 236, 172, 37, 173, 200, 156, 229, 183, 90, 121, 51, 42, 74, 54, 3, 213, 73, 19, 136, 4, 131, 170, 72, 89, 92, 192, 90, 9, 221, 218, 29, 136, 0, 70, 84, 248, 161, 220, 52, 126, 66, 106, 100, 91, 113, 251, 221, 27, 126, 103, 168, 79, 36, 137, 32, 68, 42, 185, 121 },
                            PhoneNumber = "0905012345",
                            idRole = 1
                        },
                        new
                        {
                            IdUser = new Guid("3ba4b5ec-1ad8-4676-8871-122749af64e4"),
                            Address = "789 Oak Lane, Chicago, IL",
                            Avatar = "https://res.cloudinary.com/dzdfqqdxs/image/upload/v1719069658/uxi5cbd5ohtwtefwu2un.jpg",
                            CreatedAt = new DateTime(2024, 6, 23, 17, 5, 9, 495, DateTimeKind.Local).AddTicks(7137),
                            DOB = new DateTime(1975, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "michael.jordan@gmail.com",
                            Gender = true,
                            IsAdminDisabled = false,
                            IsLocked = false,
                            IsVerified = true,
                            Name = "Michael Jordan",
                            OTPCreatedAt = new DateTime(2024, 6, 23, 10, 5, 9, 495, DateTimeKind.Utc).AddTicks(7159),
                            OTPVerification = "123456",
                            PasswordHash = new byte[] { 67, 247, 87, 14, 16, 78, 130, 63, 107, 5, 190, 219, 169, 236, 147, 1, 124, 79, 160, 255, 172, 142, 152, 99, 251, 212, 13, 36, 134, 233, 58, 60 },
                            PasswordSalt = new byte[] { 50, 252, 0, 220, 10, 236, 172, 37, 173, 200, 156, 229, 183, 90, 121, 51, 42, 74, 54, 3, 213, 73, 19, 136, 4, 131, 170, 72, 89, 92, 192, 90, 9, 221, 218, 29, 136, 0, 70, 84, 248, 161, 220, 52, 126, 66, 106, 100, 91, 113, 251, 221, 27, 126, 103, 168, 79, 36, 137, 32, 68, 42, 185, 121 },
                            PhoneNumber = "0905023456",
                            idRole = 1
                        },
                        new
                        {
                            IdUser = new Guid("4ba4b5ec-1ad8-4676-8871-122749af64e4"),
                            Address = "456 Pine Street, Los Angeles, CA",
                            Avatar = "https://res.cloudinary.com/dzdfqqdxs/image/upload/v1719069721/gtzyqa4injuat46wbtsb.jpg",
                            CreatedAt = new DateTime(2024, 6, 23, 17, 5, 9, 495, DateTimeKind.Local).AddTicks(7161),
                            DOB = new DateTime(1995, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "emily.davis@gmail.com",
                            Gender = false,
                            IsAdminDisabled = false,
                            IsLocked = false,
                            IsVerified = true,
                            Name = "Emily Davis",
                            OTPCreatedAt = new DateTime(2024, 6, 23, 10, 5, 9, 495, DateTimeKind.Utc).AddTicks(7183),
                            OTPVerification = "123456",
                            PasswordHash = new byte[] { 67, 247, 87, 14, 16, 78, 130, 63, 107, 5, 190, 219, 169, 236, 147, 1, 124, 79, 160, 255, 172, 142, 152, 99, 251, 212, 13, 36, 134, 233, 58, 60 },
                            PasswordSalt = new byte[] { 50, 252, 0, 220, 10, 236, 172, 37, 173, 200, 156, 229, 183, 90, 121, 51, 42, 74, 54, 3, 213, 73, 19, 136, 4, 131, 170, 72, 89, 92, 192, 90, 9, 221, 218, 29, 136, 0, 70, 84, 248, 161, 220, 52, 126, 66, 106, 100, 91, 113, 251, 221, 27, 126, 103, 168, 79, 36, 137, 32, 68, 42, 185, 121 },
                            PhoneNumber = "0905034567",
                            idRole = 1
                        },
                        new
                        {
                            IdUser = new Guid("5ba4b5ec-1ad8-4676-8871-122749af64e4"),
                            Address = "321 Cedar Drive, Boston, MA",
                            Avatar = "https://res.cloudinary.com/dzdfqqdxs/image/upload/v1719070149/ez0opee2spindl6qiypt.jpg",
                            CreatedAt = new DateTime(2024, 6, 23, 17, 5, 9, 495, DateTimeKind.Local).AddTicks(7184),
                            DOB = new DateTime(1980, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "robert.brown@gmail.com",
                            Gender = true,
                            IsAdminDisabled = false,
                            IsLocked = false,
                            IsVerified = true,
                            Name = "Robert Brown",
                            OTPCreatedAt = new DateTime(2024, 6, 23, 10, 5, 9, 495, DateTimeKind.Utc).AddTicks(7208),
                            OTPVerification = "123456",
                            PasswordHash = new byte[] { 67, 247, 87, 14, 16, 78, 130, 63, 107, 5, 190, 219, 169, 236, 147, 1, 124, 79, 160, 255, 172, 142, 152, 99, 251, 212, 13, 36, 134, 233, 58, 60 },
                            PasswordSalt = new byte[] { 50, 252, 0, 220, 10, 236, 172, 37, 173, 200, 156, 229, 183, 90, 121, 51, 42, 74, 54, 3, 213, 73, 19, 136, 4, 131, 170, 72, 89, 92, 192, 90, 9, 221, 218, 29, 136, 0, 70, 84, 248, 161, 220, 52, 126, 66, 106, 100, 91, 113, 251, 221, 27, 126, 103, 168, 79, 36, 137, 32, 68, 42, 185, 121 },
                            PhoneNumber = "0905045678",
                            idRole = 1
                        },
                        new
                        {
                            IdUser = new Guid("6ba4b5ec-1ad8-4676-8871-122749af64e4"),
                            Address = "654 Birch Avenue, Seattle, WA",
                            Avatar = "https://res.cloudinary.com/dzdfqqdxs/image/upload/v1719070219/mfyvzdpu2tfyovqv6zk9.jpg",
                            CreatedAt = new DateTime(2024, 6, 23, 17, 5, 9, 495, DateTimeKind.Local).AddTicks(7209),
                            DOB = new DateTime(1992, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "lisa.wilson@gmail.com",
                            Gender = false,
                            IsAdminDisabled = false,
                            IsLocked = false,
                            IsVerified = true,
                            Name = "Lisa Wilson",
                            OTPCreatedAt = new DateTime(2024, 6, 23, 10, 5, 9, 495, DateTimeKind.Utc).AddTicks(7231),
                            OTPVerification = "123456",
                            PasswordHash = new byte[] { 67, 247, 87, 14, 16, 78, 130, 63, 107, 5, 190, 219, 169, 236, 147, 1, 124, 79, 160, 255, 172, 142, 152, 99, 251, 212, 13, 36, 134, 233, 58, 60 },
                            PasswordSalt = new byte[] { 50, 252, 0, 220, 10, 236, 172, 37, 173, 200, 156, 229, 183, 90, 121, 51, 42, 74, 54, 3, 213, 73, 19, 136, 4, 131, 170, 72, 89, 92, 192, 90, 9, 221, 218, 29, 136, 0, 70, 84, 248, 161, 220, 52, 126, 66, 106, 100, 91, 113, 251, 221, 27, 126, 103, 168, 79, 36, 137, 32, 68, 42, 185, 121 },
                            PhoneNumber = "0905056789",
                            idRole = 1
                        },
                        new
                        {
                            IdUser = new Guid("7ba4b5ec-1ad8-4676-8871-122749af64e4"),
                            Address = "987 Willow Lane, Miami, FL",
                            Avatar = "https://res.cloudinary.com/dzdfqqdxs/image/upload/v1719070316/o1pmjoj2vu1jycmmb6ny.jpg",
                            CreatedAt = new DateTime(2024, 6, 23, 17, 5, 9, 495, DateTimeKind.Local).AddTicks(7232),
                            DOB = new DateTime(1988, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "david.clark@example.com",
                            Gender = true,
                            IsAdminDisabled = false,
                            IsLocked = false,
                            IsVerified = true,
                            Name = "David Clark",
                            OTPCreatedAt = new DateTime(2024, 6, 23, 10, 5, 9, 495, DateTimeKind.Utc).AddTicks(7255),
                            OTPVerification = "123456",
                            PasswordHash = new byte[] { 67, 247, 87, 14, 16, 78, 130, 63, 107, 5, 190, 219, 169, 236, 147, 1, 124, 79, 160, 255, 172, 142, 152, 99, 251, 212, 13, 36, 134, 233, 58, 60 },
                            PasswordSalt = new byte[] { 50, 252, 0, 220, 10, 236, 172, 37, 173, 200, 156, 229, 183, 90, 121, 51, 42, 74, 54, 3, 213, 73, 19, 136, 4, 131, 170, 72, 89, 92, 192, 90, 9, 221, 218, 29, 136, 0, 70, 84, 248, 161, 220, 52, 126, 66, 106, 100, 91, 113, 251, 221, 27, 126, 103, 168, 79, 36, 137, 32, 68, 42, 185, 121 },
                            PhoneNumber = "0905067890",
                            idRole = 1
                        },
                        new
                        {
                            IdUser = new Guid("6d2fc8cc-cbfa-401d-aef5-2d1588751d32"),
                            Address = "19 Nguyen Tuong Pho Street, Hoa Minh, Lien Chieu, Da Nang",
                            Avatar = "https://res.cloudinary.com/doctena/image/upload/c_thumb,f_auto,g_face,h_100,w_100,z_0.7/v1680511237/2fb7ee0f-dfee-4579-a119-95bccd9bdea6/fa9d5fa9-2c93-428b-aee0-03f4ce064bd9.jpg",
                            CreatedAt = new DateTime(2024, 6, 23, 17, 5, 9, 495, DateTimeKind.Local).AddTicks(7257),
                            DOB = new DateTime(1972, 7, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "john.smith@gmail.com",
                            Gender = true,
                            IsAdminDisabled = false,
                            IsLocked = false,
                            IsVerified = true,
                            Name = "Dr. John Smith",
                            OTPCreatedAt = new DateTime(2024, 6, 23, 10, 5, 9, 495, DateTimeKind.Utc).AddTicks(7281),
                            OTPVerification = "123456",
                            PasswordHash = new byte[] { 67, 247, 87, 14, 16, 78, 130, 63, 107, 5, 190, 219, 169, 236, 147, 1, 124, 79, 160, 255, 172, 142, 152, 99, 251, 212, 13, 36, 134, 233, 58, 60 },
                            PasswordSalt = new byte[] { 50, 252, 0, 220, 10, 236, 172, 37, 173, 200, 156, 229, 183, 90, 121, 51, 42, 74, 54, 3, 213, 73, 19, 136, 4, 131, 170, 72, 89, 92, 192, 90, 9, 221, 218, 29, 136, 0, 70, 84, 248, 161, 220, 52, 126, 66, 106, 100, 91, 113, 251, 221, 27, 126, 103, 168, 79, 36, 137, 32, 68, 42, 185, 121 },
                            PhoneNumber = "0900127848",
                            idRole = 2,
                            latitude = "16.063627",
                            longtitude = "108.1745195"
                        },
                        new
                        {
                            IdUser = new Guid("9f12c430-de83-4910-92ac-704bffefaab2"),
                            Address = "517 Ton Duc Thang Street, Hoa Khanh Nam, Lien Chieu, Da Nang",
                            Avatar = "https://res.cloudinary.com/doctena/image/upload/c_thumb,f_auto,g_face,h_100,w_100,z_0.7/v1680511603/df59eb21-3a29-4c7a-b762-d9bff4e4da9a/759f1e45-7879-41f2-a270-fd5f55c9fed5.jpg",
                            CreatedAt = new DateTime(2024, 6, 23, 17, 5, 9, 495, DateTimeKind.Local).AddTicks(7283),
                            DOB = new DateTime(1961, 2, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "emily.johnson@gmail.com",
                            Gender = true,
                            IsAdminDisabled = false,
                            IsLocked = false,
                            IsVerified = true,
                            Name = "Dr. Emily Johnson",
                            OTPCreatedAt = new DateTime(2024, 6, 23, 10, 5, 9, 495, DateTimeKind.Utc).AddTicks(7306),
                            OTPVerification = "123456",
                            PasswordHash = new byte[] { 67, 247, 87, 14, 16, 78, 130, 63, 107, 5, 190, 219, 169, 236, 147, 1, 124, 79, 160, 255, 172, 142, 152, 99, 251, 212, 13, 36, 134, 233, 58, 60 },
                            PasswordSalt = new byte[] { 50, 252, 0, 220, 10, 236, 172, 37, 173, 200, 156, 229, 183, 90, 121, 51, 42, 74, 54, 3, 213, 73, 19, 136, 4, 131, 170, 72, 89, 92, 192, 90, 9, 221, 218, 29, 136, 0, 70, 84, 248, 161, 220, 52, 126, 66, 106, 100, 91, 113, 251, 221, 27, 126, 103, 168, 79, 36, 137, 32, 68, 42, 185, 121 },
                            PhoneNumber = "0941448374",
                            idRole = 2,
                            latitude = "16.06452980000006",
                            longtitude = "108.15611821300007"
                        },
                        new
                        {
                            IdUser = new Guid("efaaf180-4211-45d1-9b08-f085f19cb451"),
                            Address = "276 Dong Da Street, Thanh Binh, Hai Chau, Da Nang",
                            Avatar = "https://res.cloudinary.com/doctena/image/upload/c_thumb,f_auto,g_face,h_100,w_100,z_0.7/v1680512033/48485db2-ab6e-4f98-93e1-504965cec010/3b9d9971-40bc-40de-bd43-7e1bb35c83dd.jpg",
                            CreatedAt = new DateTime(2024, 6, 23, 17, 5, 9, 495, DateTimeKind.Local).AddTicks(7308),
                            DOB = new DateTime(1963, 3, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "michael.brown@gmail.com",
                            Gender = true,
                            IsAdminDisabled = false,
                            IsLocked = false,
                            IsVerified = true,
                            Name = "Dr. Michael Brown",
                            OTPCreatedAt = new DateTime(2024, 6, 23, 10, 5, 9, 495, DateTimeKind.Utc).AddTicks(7331),
                            OTPVerification = "123456",
                            PasswordHash = new byte[] { 67, 247, 87, 14, 16, 78, 130, 63, 107, 5, 190, 219, 169, 236, 147, 1, 124, 79, 160, 255, 172, 142, 152, 99, 251, 212, 13, 36, 134, 233, 58, 60 },
                            PasswordSalt = new byte[] { 50, 252, 0, 220, 10, 236, 172, 37, 173, 200, 156, 229, 183, 90, 121, 51, 42, 74, 54, 3, 213, 73, 19, 136, 4, 131, 170, 72, 89, 92, 192, 90, 9, 221, 218, 29, 136, 0, 70, 84, 248, 161, 220, 52, 126, 66, 106, 100, 91, 113, 251, 221, 27, 126, 103, 168, 79, 36, 137, 32, 68, 42, 185, 121 },
                            PhoneNumber = "0934778332",
                            idRole = 2,
                            latitude = "16.0765671",
                            longtitude = "108.2155694"
                        },
                        new
                        {
                            IdUser = new Guid("efaaf180-4211-45d1-9b08-f085f19cb452"),
                            Address = "33 Cao Thang Street, Thanh Binh, Hai Chau, Da Nang",
                            Avatar = "https://res.cloudinary.com/doctena/image/upload/c_thumb,f_auto,g_face,h_100,w_100,z_0.7/v1525960428/98dfc23b-c970-4342-b57d-08c386c43e5d/572fe2a8-64e1-4087-a018-3866079e6ff5.jpg",
                            CreatedAt = new DateTime(2024, 6, 23, 17, 5, 9, 495, DateTimeKind.Local).AddTicks(7333),
                            DOB = new DateTime(1975, 11, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "sarah.davis@gmail.com",
                            Gender = false,
                            IsAdminDisabled = false,
                            IsLocked = false,
                            IsVerified = true,
                            Name = "Prof. Dr. Sarah Davis",
                            OTPCreatedAt = new DateTime(2024, 6, 23, 10, 5, 9, 495, DateTimeKind.Utc).AddTicks(7355),
                            OTPVerification = "123456",
                            PasswordHash = new byte[] { 67, 247, 87, 14, 16, 78, 130, 63, 107, 5, 190, 219, 169, 236, 147, 1, 124, 79, 160, 255, 172, 142, 152, 99, 251, 212, 13, 36, 134, 233, 58, 60 },
                            PasswordSalt = new byte[] { 50, 252, 0, 220, 10, 236, 172, 37, 173, 200, 156, 229, 183, 90, 121, 51, 42, 74, 54, 3, 213, 73, 19, 136, 4, 131, 170, 72, 89, 92, 192, 90, 9, 221, 218, 29, 136, 0, 70, 84, 248, 161, 220, 52, 126, 66, 106, 100, 91, 113, 251, 221, 27, 126, 103, 168, 79, 36, 137, 32, 68, 42, 185, 121 },
                            PhoneNumber = "0929064778",
                            idRole = 2,
                            latitude = "16.07616593590908",
                            longtitude = "108.2142730839606"
                        },
                        new
                        {
                            IdUser = new Guid("efaaf180-4211-45d1-9b08-f085f19cb453"),
                            Address = "96 Trieu Nu Vuong Street, Hai Chau 2, Hai Chau, Da Nang",
                            Avatar = "https://res.cloudinary.com/doctena/image/upload/c_thumb,f_auto,g_face,h_100,w_100,z_0.7/v1680511470/c4fa22c5-790e-4f3f-8511-5b114670ed85/54e56361-e48d-43f7-8d3b-adbe1a59a36e.jpg",
                            CreatedAt = new DateTime(2024, 6, 23, 17, 5, 9, 495, DateTimeKind.Local).AddTicks(7357),
                            DOB = new DateTime(1967, 9, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "david.wilson@gmail.com",
                            Gender = true,
                            IsAdminDisabled = false,
                            IsLocked = false,
                            IsVerified = true,
                            Name = "Prof. Dr. David Wilson",
                            OTPCreatedAt = new DateTime(2024, 6, 23, 10, 5, 9, 495, DateTimeKind.Utc).AddTicks(7381),
                            OTPVerification = "123456",
                            PasswordHash = new byte[] { 67, 247, 87, 14, 16, 78, 130, 63, 107, 5, 190, 219, 169, 236, 147, 1, 124, 79, 160, 255, 172, 142, 152, 99, 251, 212, 13, 36, 134, 233, 58, 60 },
                            PasswordSalt = new byte[] { 50, 252, 0, 220, 10, 236, 172, 37, 173, 200, 156, 229, 183, 90, 121, 51, 42, 74, 54, 3, 213, 73, 19, 136, 4, 131, 170, 72, 89, 92, 192, 90, 9, 221, 218, 29, 136, 0, 70, 84, 248, 161, 220, 52, 126, 66, 106, 100, 91, 113, 251, 221, 27, 126, 103, 168, 79, 36, 137, 32, 68, 42, 185, 121 },
                            PhoneNumber = "0965597404",
                            idRole = 2,
                            latitude = "16.064064461000044",
                            longtitude = "108.21653123000004"
                        },
                        new
                        {
                            IdUser = new Guid("efaaf180-4211-45d1-9b08-f085f19cb454"),
                            Address = "2 Le Thanh Nghi Street, Hoa Cuong, Hai Chau, Da Nang",
                            Avatar = "https://res.cloudinary.com/doctena/image/upload/c_thumb,f_auto,g_face,h_100,w_100,z_0.7/v1618488149/d889bf94-d4c8-4a62-a1dc-35735256b1ce/8006a4f9-e47a-454f-bcba-25e60e504dde.jpg",
                            CreatedAt = new DateTime(2024, 6, 23, 17, 5, 9, 495, DateTimeKind.Local).AddTicks(7383),
                            DOB = new DateTime(1968, 9, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "laura.martinez@gmail.com",
                            Gender = false,
                            IsAdminDisabled = false,
                            IsLocked = false,
                            IsVerified = true,
                            Name = "Prof. Dr. Laura Martinez",
                            OTPCreatedAt = new DateTime(2024, 6, 23, 10, 5, 9, 495, DateTimeKind.Utc).AddTicks(7407),
                            OTPVerification = "123456",
                            PasswordHash = new byte[] { 67, 247, 87, 14, 16, 78, 130, 63, 107, 5, 190, 219, 169, 236, 147, 1, 124, 79, 160, 255, 172, 142, 152, 99, 251, 212, 13, 36, 134, 233, 58, 60 },
                            PasswordSalt = new byte[] { 50, 252, 0, 220, 10, 236, 172, 37, 173, 200, 156, 229, 183, 90, 121, 51, 42, 74, 54, 3, 213, 73, 19, 136, 4, 131, 170, 72, 89, 92, 192, 90, 9, 221, 218, 29, 136, 0, 70, 84, 248, 161, 220, 52, 126, 66, 106, 100, 91, 113, 251, 221, 27, 126, 103, 168, 79, 36, 137, 32, 68, 42, 185, 121 },
                            PhoneNumber = "0961733270",
                            idRole = 2,
                            latitude = "16.0445465",
                            longtitude = "108.2177031"
                        },
                        new
                        {
                            IdUser = new Guid("efaaf180-4211-45d1-9b08-f085f19cb455"),
                            Address = "64 Tran Cao Van Street, Tam Thuan, Thanh Khe, Da Nang",
                            Avatar = "https://res.cloudinary.com/doctena/image/upload/h_180,w_180,f_auto,c_thumb,g_face,z_0.7/v1610565267/c7b0c5f0-24e3-4f50-ae58-60893bf2a37a/6dd99135-5b0f-4d27-8508-1a1c23530e9b.png",
                            CreatedAt = new DateTime(2024, 6, 23, 17, 5, 9, 495, DateTimeKind.Local).AddTicks(7409),
                            DOB = new DateTime(1963, 12, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "robert.taylor@gmail.com",
                            Gender = true,
                            IsAdminDisabled = false,
                            IsLocked = false,
                            IsVerified = true,
                            Name = "Assoc. Prof. Dr. Robert Taylor",
                            OTPCreatedAt = new DateTime(2024, 6, 23, 10, 5, 9, 495, DateTimeKind.Utc).AddTicks(7456),
                            OTPVerification = "123456",
                            PasswordHash = new byte[] { 67, 247, 87, 14, 16, 78, 130, 63, 107, 5, 190, 219, 169, 236, 147, 1, 124, 79, 160, 255, 172, 142, 152, 99, 251, 212, 13, 36, 134, 233, 58, 60 },
                            PasswordSalt = new byte[] { 50, 252, 0, 220, 10, 236, 172, 37, 173, 200, 156, 229, 183, 90, 121, 51, 42, 74, 54, 3, 213, 73, 19, 136, 4, 131, 170, 72, 89, 92, 192, 90, 9, 221, 218, 29, 136, 0, 70, 84, 248, 161, 220, 52, 126, 66, 106, 100, 91, 113, 251, 221, 27, 126, 103, 168, 79, 36, 137, 32, 68, 42, 185, 121 },
                            PhoneNumber = "0906893161",
                            idRole = 2,
                            latitude = "16.072938523909848",
                            longtitude = "108.21087439696076"
                        },
                        new
                        {
                            IdUser = new Guid("efaaf180-4211-45d1-9b08-f085f19cb456"),
                            Address = "82 Quang Trung Street, Thach Thang, Hai Chau, Da Nang",
                            Avatar = "https://res.cloudinary.com/doctena/image/upload/c_thumb,f_auto,g_face,h_100,w_100,z_0.7/v1525960875/07700e7c-2f24-453f-be7e-0437edc6c3a2/ccee4ba3-2b9a-4f51-991d-8b9d76c5ac65.jpg",
                            CreatedAt = new DateTime(2024, 6, 23, 17, 5, 9, 495, DateTimeKind.Local).AddTicks(7499),
                            DOB = new DateTime(1962, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jessica.moore@gmail.com",
                            Gender = false,
                            IsAdminDisabled = false,
                            IsLocked = false,
                            IsVerified = true,
                            Name = "Assoc. Prof. Dr. Jessica Moore",
                            OTPCreatedAt = new DateTime(2024, 6, 23, 10, 5, 9, 495, DateTimeKind.Utc).AddTicks(7519),
                            OTPVerification = "123456",
                            PasswordHash = new byte[] { 67, 247, 87, 14, 16, 78, 130, 63, 107, 5, 190, 219, 169, 236, 147, 1, 124, 79, 160, 255, 172, 142, 152, 99, 251, 212, 13, 36, 134, 233, 58, 60 },
                            PasswordSalt = new byte[] { 50, 252, 0, 220, 10, 236, 172, 37, 173, 200, 156, 229, 183, 90, 121, 51, 42, 74, 54, 3, 213, 73, 19, 136, 4, 131, 170, 72, 89, 92, 192, 90, 9, 221, 218, 29, 136, 0, 70, 84, 248, 161, 220, 52, 126, 66, 106, 100, 91, 113, 251, 221, 27, 126, 103, 168, 79, 36, 137, 32, 68, 42, 185, 121 },
                            PhoneNumber = "0923267870",
                            idRole = 2,
                            latitude = "16.074633395000035",
                            longtitude = "108.21884153500008"
                        },
                        new
                        {
                            IdUser = new Guid("e4a0f9d1-f914-4d85-bfe1-1dc5c4507a6f"),
                            Address = "142 Trieu Nu Vuong Street, Hai Chau 2, Hai Chau, Da Nang",
                            Avatar = "https://res.cloudinary.com/doctena/image/upload/c_thumb,f_auto,g_face,h_100,w_100,z_0.7/v1589829513/2f72c6b5-f53c-4473-bea5-47e7a5e60f83/309cba8b-3d9e-41aa-af75-0e8c6c4d28d3.jpg",
                            CreatedAt = new DateTime(2024, 6, 23, 17, 5, 9, 495, DateTimeKind.Local).AddTicks(7521),
                            DOB = new DateTime(1964, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "alice.morgan@gmail.com",
                            Gender = false,
                            IsAdminDisabled = false,
                            IsLocked = false,
                            IsVerified = true,
                            Name = "Dr. Alice Morgan",
                            OTPCreatedAt = new DateTime(2024, 6, 23, 10, 5, 9, 495, DateTimeKind.Utc).AddTicks(7537),
                            OTPVerification = "123456",
                            PasswordHash = new byte[] { 67, 247, 87, 14, 16, 78, 130, 63, 107, 5, 190, 219, 169, 236, 147, 1, 124, 79, 160, 255, 172, 142, 152, 99, 251, 212, 13, 36, 134, 233, 58, 60 },
                            PasswordSalt = new byte[] { 50, 252, 0, 220, 10, 236, 172, 37, 173, 200, 156, 229, 183, 90, 121, 51, 42, 74, 54, 3, 213, 73, 19, 136, 4, 131, 170, 72, 89, 92, 192, 90, 9, 221, 218, 29, 136, 0, 70, 84, 248, 161, 220, 52, 126, 66, 106, 100, 91, 113, 251, 221, 27, 126, 103, 168, 79, 36, 137, 32, 68, 42, 185, 121 },
                            PhoneNumber = "0905863245",
                            idRole = 2,
                            latitude = "16.062915375000046",
                            longtitude = "108.21667342200004"
                        },
                        new
                        {
                            IdUser = new Guid("b2d5a7d6-dab1-489a-8db5-2c9483a7d948"),
                            Address = "111 Thanh Thuy Street, Thanh Binh, Hai Chau, Da Nang",
                            Avatar = "https://res.cloudinary.com/doctena/image/upload/c_thumb,f_auto,g_face,h_100,w_100,z_0.7/v1713341344/4857e326-b98c-45fa-8841-d99d1e9350f8/2e1df710-9cb1-4022-8a05-2631ee108f55.jpg",
                            CreatedAt = new DateTime(2024, 6, 23, 17, 5, 9, 495, DateTimeKind.Local).AddTicks(7539),
                            DOB = new DateTime(1969, 5, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "oliver.white@gmail.com",
                            Gender = true,
                            IsAdminDisabled = false,
                            IsLocked = false,
                            IsVerified = true,
                            Name = "Dr. Oliver White",
                            OTPCreatedAt = new DateTime(2024, 6, 23, 10, 5, 9, 495, DateTimeKind.Utc).AddTicks(7557),
                            OTPVerification = "123456",
                            PasswordHash = new byte[] { 67, 247, 87, 14, 16, 78, 130, 63, 107, 5, 190, 219, 169, 236, 147, 1, 124, 79, 160, 255, 172, 142, 152, 99, 251, 212, 13, 36, 134, 233, 58, 60 },
                            PasswordSalt = new byte[] { 50, 252, 0, 220, 10, 236, 172, 37, 173, 200, 156, 229, 183, 90, 121, 51, 42, 74, 54, 3, 213, 73, 19, 136, 4, 131, 170, 72, 89, 92, 192, 90, 9, 221, 218, 29, 136, 0, 70, 84, 248, 161, 220, 52, 126, 66, 106, 100, 91, 113, 251, 221, 27, 126, 103, 168, 79, 36, 137, 32, 68, 42, 185, 121 },
                            PhoneNumber = "0932476895",
                            idRole = 2,
                            latitude = "16.08356567900006",
                            longtitude = "108.21406614200004"
                        },
                        new
                        {
                            IdUser = new Guid("f76c3b89-8fcd-4e5f-abc1-39c13fb8a97d"),
                            Address = "95 Hai Phong Street, Thach Thang, Hai Chau, Da Nang",
                            Avatar = "https://res.cloudinary.com/doctena/image/upload/c_thumb,f_auto,g_face,h_100,w_100,z_0.7/v1597687679/ba815298-2ce2-456c-9710-822d7750f4de/02a1a5b5-b8b9-4648-8ed8-6996662d0724.jpg",
                            CreatedAt = new DateTime(2024, 6, 23, 17, 5, 9, 495, DateTimeKind.Local).AddTicks(7558),
                            DOB = new DateTime(1965, 8, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "sophie.harris@gmail.com",
                            Gender = false,
                            IsAdminDisabled = false,
                            IsLocked = false,
                            IsVerified = true,
                            Name = "Dr. Sophie Harris",
                            OTPCreatedAt = new DateTime(2024, 6, 23, 10, 5, 9, 495, DateTimeKind.Utc).AddTicks(7575),
                            OTPVerification = "123456",
                            PasswordHash = new byte[] { 67, 247, 87, 14, 16, 78, 130, 63, 107, 5, 190, 219, 169, 236, 147, 1, 124, 79, 160, 255, 172, 142, 152, 99, 251, 212, 13, 36, 134, 233, 58, 60 },
                            PasswordSalt = new byte[] { 50, 252, 0, 220, 10, 236, 172, 37, 173, 200, 156, 229, 183, 90, 121, 51, 42, 74, 54, 3, 213, 73, 19, 136, 4, 131, 170, 72, 89, 92, 192, 90, 9, 221, 218, 29, 136, 0, 70, 84, 248, 161, 220, 52, 126, 66, 106, 100, 91, 113, 251, 221, 27, 126, 103, 168, 79, 36, 137, 32, 68, 42, 185, 121 },
                            PhoneNumber = "0928631974",
                            idRole = 2,
                            latitude = "16.071919252000043",
                            longtitude = "108.21535855300004"
                        },
                        new
                        {
                            IdUser = new Guid("cf9b2f8e-59c9-4f09-8fa1-d624fd0d5bcb"),
                            Address = "21 Thai Van Lung Street, Hoa Xuan, Cam Le, Da Nang",
                            Avatar = "https://res.cloudinary.com/doctena/image/upload/c_thumb,f_auto,g_face,h_100,w_100,z_0.7/v1525960591/8afad210-bc4f-4af0-9eb4-0ff5032c96a2/5d255b73-661f-4674-98e9-d0e24c83ba6d.jpg",
                            CreatedAt = new DateTime(2024, 6, 23, 17, 5, 9, 495, DateTimeKind.Local).AddTicks(7576),
                            DOB = new DateTime(1962, 12, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "henry.walker@gmail.com",
                            Gender = true,
                            IsAdminDisabled = false,
                            IsLocked = false,
                            IsVerified = true,
                            Name = "Dr. Henry Walker",
                            OTPCreatedAt = new DateTime(2024, 6, 23, 10, 5, 9, 495, DateTimeKind.Utc).AddTicks(7592),
                            OTPVerification = "123456",
                            PasswordHash = new byte[] { 67, 247, 87, 14, 16, 78, 130, 63, 107, 5, 190, 219, 169, 236, 147, 1, 124, 79, 160, 255, 172, 142, 152, 99, 251, 212, 13, 36, 134, 233, 58, 60 },
                            PasswordSalt = new byte[] { 50, 252, 0, 220, 10, 236, 172, 37, 173, 200, 156, 229, 183, 90, 121, 51, 42, 74, 54, 3, 213, 73, 19, 136, 4, 131, 170, 72, 89, 92, 192, 90, 9, 221, 218, 29, 136, 0, 70, 84, 248, 161, 220, 52, 126, 66, 106, 100, 91, 113, 251, 221, 27, 126, 103, 168, 79, 36, 137, 32, 68, 42, 185, 121 },
                            PhoneNumber = "0945381720",
                            idRole = 2,
                            latitude = "16.02039805800007",
                            longtitude = "108.22470250100008"
                        },
                        new
                        {
                            IdUser = new Guid("4a9dc58e-282a-4f92-9b0d-bb1a707c3f7b"),
                            Address = "280 Nguyen Huu Tho Street, Khue Trung Ward, Cam Le District, Da Nang City",
                            Avatar = "https://res.cloudinary.com/doctena/image/upload/c_thumb,f_auto,g_face,h_100,w_100,z_0.7/v1540363288/412b2fae-1c1e-4923-952b-358d971977df/13f5a650-d939-45b5-a621-344f1144b004.jpg",
                            CreatedAt = new DateTime(2024, 6, 23, 17, 5, 9, 495, DateTimeKind.Local).AddTicks(7593),
                            DOB = new DateTime(1963, 4, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mia.robinson@gmail.com",
                            Gender = true,
                            IsAdminDisabled = false,
                            IsLocked = false,
                            IsVerified = true,
                            Name = "Dr. Mia Robinson",
                            OTPCreatedAt = new DateTime(2024, 6, 23, 10, 5, 9, 495, DateTimeKind.Utc).AddTicks(7609),
                            OTPVerification = "123456",
                            PasswordHash = new byte[] { 67, 247, 87, 14, 16, 78, 130, 63, 107, 5, 190, 219, 169, 236, 147, 1, 124, 79, 160, 255, 172, 142, 152, 99, 251, 212, 13, 36, 134, 233, 58, 60 },
                            PasswordSalt = new byte[] { 50, 252, 0, 220, 10, 236, 172, 37, 173, 200, 156, 229, 183, 90, 121, 51, 42, 74, 54, 3, 213, 73, 19, 136, 4, 131, 170, 72, 89, 92, 192, 90, 9, 221, 218, 29, 136, 0, 70, 84, 248, 161, 220, 52, 126, 66, 106, 100, 91, 113, 251, 221, 27, 126, 103, 168, 79, 36, 137, 32, 68, 42, 185, 121 },
                            PhoneNumber = "0936842197",
                            idRole = 2,
                            latitude = "16.0374192",
                            longtitude = "108.2098811"
                        },
                        new
                        {
                            IdUser = new Guid("d6a4c3e8-9111-4bc2-b0b9-e84b4dfb5d9e"),
                            Address = "2 Le Thanh Nghi Street, Hoa Cuong, Hai Chau, Da Nang",
                            Avatar = "https://res.cloudinary.com/doctena/image/upload/c_thumb,f_auto,g_face,h_100,w_100,z_0.7/v1525963679/17b30593-83ec-47b5-b08f-744a3f019e81/e4b189ea-1bbb-40f1-b488-dc6e433d4b1d.jpg",
                            CreatedAt = new DateTime(2024, 6, 23, 17, 5, 9, 495, DateTimeKind.Local).AddTicks(7610),
                            DOB = new DateTime(1966, 11, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "james.clark@gmail.com",
                            Gender = true,
                            IsAdminDisabled = false,
                            IsLocked = false,
                            IsVerified = true,
                            Name = "Dr. James Clark",
                            OTPCreatedAt = new DateTime(2024, 6, 23, 10, 5, 9, 495, DateTimeKind.Utc).AddTicks(7627),
                            OTPVerification = "123456",
                            PasswordHash = new byte[] { 67, 247, 87, 14, 16, 78, 130, 63, 107, 5, 190, 219, 169, 236, 147, 1, 124, 79, 160, 255, 172, 142, 152, 99, 251, 212, 13, 36, 134, 233, 58, 60 },
                            PasswordSalt = new byte[] { 50, 252, 0, 220, 10, 236, 172, 37, 173, 200, 156, 229, 183, 90, 121, 51, 42, 74, 54, 3, 213, 73, 19, 136, 4, 131, 170, 72, 89, 92, 192, 90, 9, 221, 218, 29, 136, 0, 70, 84, 248, 161, 220, 52, 126, 66, 106, 100, 91, 113, 251, 221, 27, 126, 103, 168, 79, 36, 137, 32, 68, 42, 185, 121 },
                            PhoneNumber = "0941205864",
                            idRole = 2,
                            latitude = "16.0445465",
                            longtitude = "108.2177031"
                        },
                        new
                        {
                            IdUser = new Guid("1f2b4a9d-793e-4c89-9fdf-3d1e684d816f"),
                            Address = "1081 Ngo Quyen Street, An Hai Bac, Son Tra, Da Nang",
                            Avatar = "https://res.cloudinary.com/doctena/image/upload/c_thumb,f_auto,g_face,h_100,w_100,z_0.7/v1542460196/fab102d3-a80c-44cf-93fe-d2f03d104dfb/339ba259-2169-4ab8-b7c5-7c9c656ca099.jpg",
                            CreatedAt = new DateTime(2024, 6, 23, 17, 5, 9, 495, DateTimeKind.Local).AddTicks(7628),
                            DOB = new DateTime(1968, 10, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ava.thompson@gmail.com",
                            Gender = true,
                            IsAdminDisabled = false,
                            IsLocked = false,
                            IsVerified = true,
                            Name = "Dr. Ava Thompson",
                            OTPCreatedAt = new DateTime(2024, 6, 23, 10, 5, 9, 495, DateTimeKind.Utc).AddTicks(7645),
                            OTPVerification = "123456",
                            PasswordHash = new byte[] { 67, 247, 87, 14, 16, 78, 130, 63, 107, 5, 190, 219, 169, 236, 147, 1, 124, 79, 160, 255, 172, 142, 152, 99, 251, 212, 13, 36, 134, 233, 58, 60 },
                            PasswordSalt = new byte[] { 50, 252, 0, 220, 10, 236, 172, 37, 173, 200, 156, 229, 183, 90, 121, 51, 42, 74, 54, 3, 213, 73, 19, 136, 4, 131, 170, 72, 89, 92, 192, 90, 9, 221, 218, 29, 136, 0, 70, 84, 248, 161, 220, 52, 126, 66, 106, 100, 91, 113, 251, 221, 27, 126, 103, 168, 79, 36, 137, 32, 68, 42, 185, 121 },
                            PhoneNumber = "0931467082",
                            idRole = 2,
                            latitude = "16.0598485",
                            longtitude = "108.2346953"
                        },
                        new
                        {
                            IdUser = new Guid("efaaf143-4211-45d1-9b08-f085f19caa56"),
                            CreatedAt = new DateTime(2024, 6, 23, 17, 5, 9, 495, DateTimeKind.Local).AddTicks(7647),
                            Email = "admin@gmail.com",
                            IsAdminDisabled = false,
                            IsLocked = false,
                            IsVerified = true,
                            Name = "Admin",
                            OTPCreatedAt = new DateTime(2024, 6, 23, 10, 5, 9, 495, DateTimeKind.Utc).AddTicks(7661),
                            OTPVerification = "123456",
                            PasswordHash = new byte[] { 67, 247, 87, 14, 16, 78, 130, 63, 107, 5, 190, 219, 169, 236, 147, 1, 124, 79, 160, 255, 172, 142, 152, 99, 251, 212, 13, 36, 134, 233, 58, 60 },
                            PasswordSalt = new byte[] { 50, 252, 0, 220, 10, 236, 172, 37, 173, 200, 156, 229, 183, 90, 121, 51, 42, 74, 54, 3, 213, 73, 19, 136, 4, 131, 170, 72, 89, 92, 192, 90, 9, 221, 218, 29, 136, 0, 70, 84, 248, 161, 220, 52, 126, 66, 106, 100, 91, 113, 251, 221, 27, 126, 103, 168, 79, 36, 137, 32, 68, 42, 185, 121 },
                            idRole = 3
                        });
                });

            modelBuilder.Entity("BE_Healthcare.Data.Entities.WorkingProcess", b =>
                {
                    b.Property<int>("IdWorkingProcess")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("EndYear")
                        .HasColumnType("int");

                    b.Property<Guid?>("IdDoctor")
                        .HasColumnType("char(36)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("StartYear")
                        .HasColumnType("int");

                    b.Property<int?>("StatusVerified")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Workplace")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdWorkingProcess");

                    b.HasIndex("IdDoctor");

                    b.ToTable("WorkingProcesses");
                });

            modelBuilder.Entity("BE_Healthcare.Data.Entities.Appointment", b =>
                {
                    b.HasOne("BE_Healthcare.Data.Entities.Doctor", "Doctor")
                        .WithMany()
                        .HasForeignKey("IdDoctor");

                    b.HasOne("BE_Healthcare.Data.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("IdUser");

                    b.Navigation("Doctor");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BE_Healthcare.Data.Entities.Certificate", b =>
                {
                    b.HasOne("BE_Healthcare.Data.Entities.Doctor", "Doctor")
                        .WithMany("Certificates")
                        .HasForeignKey("IdDoctor");

                    b.Navigation("Doctor");
                });

            modelBuilder.Entity("BE_Healthcare.Data.Entities.Doctor", b =>
                {
                    b.HasOne("BE_Healthcare.Data.Entities.MedicalSpecialty", "MedicalSpecialty")
                        .WithMany()
                        .HasForeignKey("IdSpecialty");

                    b.HasOne("BE_Healthcare.Data.Entities.User", "User")
                        .WithOne("Doctor")
                        .HasForeignKey("BE_Healthcare.Data.Entities.Doctor", "IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MedicalSpecialty");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BE_Healthcare.Data.Entities.MedicalRecord", b =>
                {
                    b.HasOne("BE_Healthcare.Data.Entities.Doctor", "Doctor")
                        .WithMany()
                        .HasForeignKey("IdDoctor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BE_Healthcare.Data.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BE_Healthcare.Data.Entities.Rating", b =>
                {
                    b.HasOne("BE_Healthcare.Data.Entities.Doctor", "Doctor")
                        .WithMany()
                        .HasForeignKey("IdDoctor");

                    b.HasOne("BE_Healthcare.Data.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("IdUser");

                    b.Navigation("Doctor");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BE_Healthcare.Data.Entities.RefreshToken", b =>
                {
                    b.HasOne("BE_Healthcare.Data.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BE_Healthcare.Data.Entities.TimeOff", b =>
                {
                    b.HasOne("BE_Healthcare.Data.Entities.Doctor", "Doctor")
                        .WithMany()
                        .HasForeignKey("IdDoctor");

                    b.Navigation("Doctor");
                });

            modelBuilder.Entity("BE_Healthcare.Data.Entities.TrainingProcess", b =>
                {
                    b.HasOne("BE_Healthcare.Data.Entities.Doctor", "Doctor")
                        .WithMany()
                        .HasForeignKey("IdDoctor");

                    b.Navigation("Doctor");
                });

            modelBuilder.Entity("BE_Healthcare.Data.Entities.User", b =>
                {
                    b.HasOne("BE_Healthcare.Data.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("idRole")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("BE_Healthcare.Data.Entities.WorkingProcess", b =>
                {
                    b.HasOne("BE_Healthcare.Data.Entities.Doctor", "Doctor")
                        .WithMany()
                        .HasForeignKey("IdDoctor");

                    b.Navigation("Doctor");
                });

            modelBuilder.Entity("BE_Healthcare.Data.Entities.Doctor", b =>
                {
                    b.Navigation("Certificates");
                });

            modelBuilder.Entity("BE_Healthcare.Data.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("BE_Healthcare.Data.Entities.User", b =>
                {
                    b.Navigation("Doctor")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
